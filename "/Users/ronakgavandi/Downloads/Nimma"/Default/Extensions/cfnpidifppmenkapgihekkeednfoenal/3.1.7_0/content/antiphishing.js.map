{"version":3,"sources":["webpack:///./BDTLL.ts","webpack:///./BDTLL_common.ts","webpack:///./background/assl.ts","webpack:///./background/assl_common.ts","webpack:///./background/cloudTalk.ts","webpack:///./background/intercepter.ts","webpack:///./background/scanner.ts","webpack:///./background/session.ts","webpack:///./background/settings.ts","webpack:///./background/storage.ts","webpack:///./background/update.ts","webpack:///./background/whitelist.ts","webpack:///./common/browser_consts.ts","webpack:///./common/extension_consts.ts","webpack:///./common/messageService.ts","webpack:///./common/utils.ts","webpack:///webpack/bootstrap","webpack:///./content/antiphishing.ts"],"names":["assl_common","assl","CloudTalk","Update","Storage","Settings","Session","WebPage","Whitelist","Scanner","InterceptRequests","REPORT_SCANNED_PAGES_TIME_INTERVAL","DEBUG_MODE","Consts","SearchEngine","SCREEN_UI","Command","PageStatus","StatusPriority","StatusIcon","StatusGif","BarIcon","toBarIcon","SettingType","BrowserConsts","Utils","MessageService","storage","signCreated","this","sign","length","Array","nosign","slfContent","get","ruleParse","match","exec","regExtract","actionsExtract","metadataExtract","currentRule","reg","RegExp","err","type","name","regex","part","param","encoding","action","score","priority","rules","push","sort","a","b","meta","body_raw","body_decoded","url","title","domain","scripts","Date","i","BDTLL","runRule","verdict","runMetaRule","indexOf","pathRegex","path","rule","hitScripts","getPath","params","getParams","logicalExpression","items","ruleNameRegExp","ruleName","ruleObjArr","internal","listOfRules","extractRules","ruleObj","hit","res1","getRule","concat","res2","replace","evaluateExpression","item","index","SAFE","status_message","Math","max","map","status","response","Promise","resolve","requestData","xhr","XMLHttpRequest","open","setRequestHeader","BROWSER_CLIENTID","onload","responseText","onerror","console","error","statusText","undefined","stringData","JSON","stringify","send","respObj","parse","extractVerdict","session","checkedDomains","injectAPHcount","threatFilterListener","filter","bind","aphListener","injectAntiphishing","searchAnalyzerListener","injectSearchAnalyzer","_shouldInjectAPH","value","oldValue","startPageScanner","stopPageScanner","requestDetails","domainExtracted","URL","hostname","split","page","scanURL","tabId","threatStatus","sessionWhitelisted","MALWARE","PHISHING","FRAUD","MINER","PUA","tabs","redirectUrl","getExtensionUrl","cancel","changeInfo","tab","startsWith","browser","executeScript","file","document","readyState","log","webRequest","onBeforeRequest","addListener","urls","types","removeListener","onUpdated","setting","THREAT_FILTER","startThreatFilter","shouldInjectAPH","SEARCH_ANALYZER","startSearchAnalyzer","stopThreatFilter","stopSearchAnalyzer","then","internalWhitelist","scannedLinks","listen","interogateCloud","statuses","request","decoded_body","removeHTMLTags","body","resp","createRegexes","scan","reportCatch","VERSION","message","sender","command","SCAN_LINKS","scanLinks","nativeApplicationName","scannedPages","blockedPages","Set","treatPage","currentSession","blockedPage","timestamp","has","add","sendBlockedPages","scanned","now","appWhitelist","scanner","whitelist","Proxy","set","obj","newPage","receiver","history","urlToTest","extractRootDomain","safelyParseJSON","HISTORY_MAX_LENGTH","count","oldestTimestamp","oldestKey","key","processPage","processor","scanThreat","active","setBrowserAction","update","isWhitelisted","WHITELISTED","scanLink","scanPage","defaultPageStatus","DISABLED","navigator","userAgent","browserAction","setIcon","currentBrowser","getCurrentBrowser","pagesBlocked","from","size","runtime","sendNativeMessage","service_status","clear","catch","that","setInterval","query","currentWindow","onRemoved","removeInfo","SCAN_PAGE","handlePageScan","id","GET_PAGE_INFO","getPageInfo","getCurrentTabId","SESSION_WHITELIST","sessionWhitelist","modules","init","val","module","enable","disable","String","GET_SETTING","SET_SETTING","local","interval","checkUpdate","currentTime","getTime","storedTime","parseInt","isNaN","reason","date","toLocaleDateString","requestInfo","filename","sURL","oRequest","xHTTPRequest","nativeXhr","GET_LAST_UPDATE","list","userWhitelist","join","splice","GET_WHITELIST","getWhitelist","WHITELIST_ADD","whitelistAdd","WHITELIST_REMOVE","whitelistRemove","MAIN","FEEDBACK","SETTINGS","UNTRUSTED","ALERT","CRITICAL","sendMessage","e","callback","onMessage","listener","hasListener","strInput","strMatch","p1","stringToTrim","white","localStorage","promiseXhr","data","reject","Error","ms","promise","timeout","setTimeout","clearTimeout","race","extensionURL","extension","getURL","lastIndexOf","hostURL","SEARCH_GOOGLE","SEARCH_YAHOO_JP","SEARCH_YAHOO","SEARCH_BING","SEARCH_DUCKDUCKGO","exception","i18n","getMessage","getUILanguage","prodInfo","prodVers","catchRepUrl","encodeURIComponent","aEvt","ads","req_params_obj","req_params","webPage","resultWebPage","stringifiedWebPage","expr","start","end","innerExpr","substr","terms","extractHostname","splitArr","arrLen","isSecondDomain","str","test","doc","windows_wp_id","by_id","getElementById","by_class","getElementsByClassName","FEEDBACK_URL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","info","gatherInfo","requestScan","window","location","metaObj","getElementsByTagName","v","attributes","s","serializer","XMLSerializer","serializeToString","f","href","innerHTML","messageBackground"],"mappings":"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","file":"content/antiphishing.js","sourcesContent":["/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nexport * from \"./BDTLL_common\";\n\nexport { assl_common } from \"./background/assl_common\";\nexport { Iassl, assl } from \"./background/assl\";\nexport { CloudTalk } from \"./background/cloudTalk\";\nexport { Update } from \"./background/update\";\n\nexport { IStorage, Storage } from \"./background/storage\";\nexport { ISwitchable, ISettings, Settings } from \"./background/settings\";\nexport { ISession, Session, WebPage } from \"./background/session\";\nexport { IWhitelist, Whitelist } from \"./background/whitelist\";\nexport { IScanner, Scanner } from \"./background/scanner\";\nexport { InterceptRequests } from \"./background/intercepter\";\n\n","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nexport { REPORT_SCANNED_PAGES_TIME_INTERVAL,\n         DEBUG_MODE, Consts, SearchEngine, SCREEN_UI, Command,\n         PageStatus, StatusPriority,\n         StatusIcon, StatusGif, BarIcon, toBarIcon,\n         SettingType} from \"./common/extension_consts\";\n        //  SettingType, SettingIcon} from \"./common/extension_consts\";\nexport { BrowserConsts } from \"./common/browser_consts\";\nexport { Utils } from \"./common/utils\";\nexport { MessageService } from \"./common/messageService\";\n\n","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\nexport interface Iassl {\n  signCreated: any;\n  sign: any;\n  nosign: any;\n  trackSign: any;\n  trackNoSign: any;\n  createRegexes(): Promise<any>;\n  scan(sign: any, nosign: any, meta: any, body_raw: any, body_decoded: any, url: any, title: any, domain: any, scripts: any): any;\n}\n\nexport class assl implements Iassl {\n\n  //----> Structures that hold the rules,metarules and metarules that have no action<------\n  internalRule: any;\n\n  signCreated = 0;\n  sign: any;\n  nosign: any;\n  trackSign: any;\n  trackNoSign: any;\n  storage: BDTLL.IStorage;\n\n  constructor(storage: BDTLL.IStorage) {\n    this.storage = storage;\n  }\n\n  async createRegexes() {\n    if (typeof(this.sign) == \"undefined\" || (typeof(this.sign) != \"undefined\" && this.sign.length == 0)) {\n      this.sign = new Array();\n      this.nosign = new Array();\n      var slfContent = await this.storage.get(\"slfContent\");\n\n      var ruleParse = /^(rule|metarule)\\s+(.*?)\\s+{\\s+condition:\\s+(.*?);\\s+actions:\\s+(.*?);\\s+metadata:\\s+(.*?);/mg;\n      var match = ruleParse.exec(slfContent);\n\n      while (match != null) {\n        var matchRegex = /match\\(\"(.*)\",\\s*(.*?)\\s*,\\s*(.*?)\\s*(,\\s*(.*?))?\\)|exec\\((.*?)\\)|(.*)/mgi;\n        var actionRegex = /mark\\(\"(.*?)\"\\s*,\\s*(\\d+)\\)|(.*)/mgi;\n        var metadataRegex = /priority\\s*=\\s*(\\d+)|(.*)/mgi;\n\n        var regExtract = matchRegex.exec(match[3]);\n        var actionsExtract = actionRegex.exec(match[4]);\n        var metadataExtract = metadataRegex.exec(match[5]);\n\n        var currentRule = null;\n        if (regExtract[1] != null) {\n          var reg: any;\n          try {\n            if (regExtract[3] == \"REGEX_INSENSITIVE\") {\n                reg = new RegExp(regExtract[1], \"i\");\n            } else {\n                reg = new RegExp(regExtract[1]);\n            }\n          } catch (err) {\n            reg = \"regex fail\";\n          }\n\n          currentRule = {\n            type: match[1],\n            name: match[2],\n            regex: reg,\n            part: regExtract[2],\n            param: regExtract[3],\n            encoding: regExtract[5],\n            action: actionsExtract[1],\n            score: actionsExtract[2],\n            priority: metadataExtract[1]\n          }\n        } else if (regExtract[6] != null) {\n          currentRule = {\n            type: match[1],\n            name: match[2],\n            exec: regExtract[6],\n            action: actionsExtract[1],\n            score: actionsExtract[2],\n            priority: metadataExtract[1]\n          }\n        } else if (regExtract[7] != null) {\n          currentRule = {\n            type: match[1],\n            name: match[2],\n            rules: regExtract[7],\n            action: actionsExtract[1],\n            score: actionsExtract[2],\n            priority: metadataExtract[1]\n          }\n        }\n        if (currentRule.action != null) {\n          this.sign.push(currentRule);\n        } else {\n          this.nosign.push(currentRule);\n        }\n\n        match = ruleParse.exec(slfContent);\n      }\n\n      this.sign.sort((a: any, b: any) => {\n        return b.priority - a.priority\n      });\n\n    }\n    return 1;\n  }\n\n  scan(sign: any, nosign: any, meta: any, body_raw: any, body_decoded: any, url: any, title: any, domain: any, scripts: any) {\n    var answer = new Array();\n\n    var currentTime = new Date();\n    var hitScripts = new Array();\n    var name = \"\";\n    for (var i = 0; i < sign.length; i++)\n\n    {\n\n      if ((sign[i].type == \"rule\") && (sign[i].action != null)) {\n        var result = BDTLL.assl_common.runRule(sign[i], meta, body_raw, body_decoded, url, title, domain, scripts)\n        if (result.verdict == true) {\n          if (sign[i].action == \"PHISHING\" || sign[i].action == \"LEGIT\") {\n            name = sign[i].name;\n            return {\n              action: sign[i].action,\n              name: name\n            };\n          }\n        }\n      } else if ((sign[i].type == \"metarule\") && (sign[i].action != null))\n\n      {\n        try {\n          var runmeta = BDTLL.assl_common.runMetaRule(sign[i], nosign, meta, body_raw, body_decoded, url, title, domain, scripts);\n\n          if (runmeta.verdict == true) {\n            if (sign[i].action == \"PHISHING\" || sign[i].action == \"LEGIT\") {\n              name = sign[i].name;\n              return {\n                action: sign[i].action,\n                name: name\n              };\n            }\n          }\n        } catch (err) {}\n      }\n    }\n    var currentTime = new Date();\n      return {\n        action: \"IGNORE\",\n        name: \"IGNORE\"\n      };\n  }\n\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\nexport class assl_common {\n    static getPath(url: any) {\n        if (url.indexOf('?') < 0) {\n            var pathRegex = /(http|https):\\/\\/.*?\\/(.*)/;\n        } else {\n            var pathRegex = /(http|https):\\/\\/.*?\\/(.*)\\?/;\n        }\n\n        var path = pathRegex.exec(url);\n\n        if (typeof(path) != \"undefined\" && path && typeof(path[2]) != \"undefined\" && path[2]) {\n            return path[2];\n        }\n    }\n\n    static getParams(url: any) {\n        var params;\n        if (url.indexOf('?') > 0) {\n            var paramRegex = /(http|https):\\/\\/.*\\/.*\\?(.*)/;\n\n            params = paramRegex.exec(url);\n            return params[2];\n        }\n        return null;\n    }\n\n    static runRule(rule: any, meta: any, body_raw: any, body_decoded: any, url: any, title: any, domain: any, scripts: any) {\n        var hitScripts = new Array();\n        if (typeof(rule) != \"undefined\") {\n            var match = null;\n            var urlRegex = /(http|https):\\/\\/(www\\.)?(.*)/;\n\n            if (rule.regex != \"regex fail\") {\n                if (typeof(rule.regex) == \"string\") {\n                    if (typeof(rule.param) != \"undefined\" && rule.param) {\n                        try {\n                            if (rule.param == \"REGEX_INSENSITIVE\") {\n                                rule.regex = new RegExp(rule.regex, \"i\");\n                            } else {\n                                rule.regex = new RegExp(rule.regex);\n                            }\n                        } catch (err) {}\n                    }\n                }\n                if (rule.part == \"HTML::Body\") {\n                    if (rule.encoding != null) {\n                        if (rule.encoding == \"DECODED\") {\n                            match = rule.regex.exec(body_decoded);\n                        } else {\n                            match = rule.regex.exec(body_raw);\n                        }\n                    } else {\n                        match = rule.regex.exec(body_raw);\n                    }\n                } else if (rule.part == \"HTML::Title\") {\n                    match = rule.regex.exec(title);\n                } else if (rule.part == \"HTML::Url\") {\n                    match = rule.regex.exec(url);\n                } else if (rule.part == \"HTML::Meta\") {\n                    match = rule.regex.exec(meta);\n                } else if (rule.part == \"HTML::Script\") {\n                    for (var i = 0; i < scripts.length; i++) {\n                        match = rule.regex.exec(scripts[i]);\n\n                        if (match != null) {\n                            hitScripts.push(scripts[i]);\n                        }\n                        match = null;\n                    }\n                    if (hitScripts.length > 0) {\n                        match = [\"true\"];\n                    }\n                } else if (rule.part == \"Url::Path\") {\n                    var path = BDTLL.assl_common.getPath(url);\n                    if (typeof(path) != 'undefined' && path) {\n                        match = rule.regex.exec(path);\n                    }\n                } else if (rule.part == \"Url::Params\") {\n                    var params = BDTLL.assl_common.getParams(url);\n                    if (typeof(params) != 'undefined' && params) {\n                        match = rule.regex.exec(params);\n                    }\n                } else if (rule.part == \"Url::Host\") {\n                    match = rule.regex.exec(domain);\n                }\n            }\n            if (match != null) {\n                return {\n                    verdict: true,\n                    scripts: hitScripts\n                }\n            }\n        }\n        return {\n            verdict: false,\n            scripts: hitScripts\n        }\n    }\n\n    static extractRules(logicalExpression: any) {\n        var items = new Array();\n        if (logicalExpression == null) {\n            return null;\n        } else {\n            var ruleNameRegExp = /[A-Z0-9_]+/mg;\n            var ruleName = ruleNameRegExp.exec(logicalExpression);\n            while (ruleName != null) {\n                items.push(ruleName);\n                ruleName = ruleNameRegExp.exec(logicalExpression);\n            }\n        }\n        return items;\n    }\n\n    static getRule(ruleName: any, nosign: any) {\n        if (ruleName) {\n            for (var i = 0; i < nosign.length; i++) {\n                if (nosign[i].name == ruleName) {\n                    return nosign[i];\n                }\n            }\n        }\n    }\n\n    static runMetaRule(rule: any, nosign: any, meta: any, body_raw: any, body_decoded: any, url: any, title: any, domain: any, scripts: any) {\n        var ruleObjArr = new Array();\n        var internal = null;\n        var hitScripts = new Array();\n        if (rule.rules != null) {\n            var listOfRules = BDTLL.assl_common.extractRules(rule.rules);\n\n            for (var i = 0; i < listOfRules.length; i++) {\n                var ruleObj = {\n                    rule: listOfRules[i],\n                    hit: false\n                }\n                ruleObjArr.push(ruleObj);\n\n            }\n            for (var i = 0; i < ruleObjArr.length; i++) {\n\n                if (ruleObjArr[i].rule.type == \"metarule\") {\n                    var res1 = BDTLL.assl_common.runMetaRule(BDTLL.assl_common.getRule(ruleObjArr[i].rule, nosign), nosign, meta, body_raw, body_decoded, url, title, domain, scripts);\n                    ruleObjArr[i].hit = res1.verdict;\n                    hitScripts = hitScripts.concat(res1.scripts);\n                } else {\n                    var res2 = BDTLL.assl_common.runRule(BDTLL.assl_common.getRule(ruleObjArr[i].rule, nosign), meta, body_raw, body_decoded, url, title, domain, scripts);\n                    ruleObjArr[i].hit = res2.verdict;\n                    hitScripts = hitScripts.concat(res2.scripts);\n                }\n            }\n            internal = rule.rules;\n\n            if (internal) {\n                for (var i = 0; i < ruleObjArr.length; i++) {\n                    internal = internal.replace(ruleObjArr[i].rule, ruleObjArr[i].hit);\n                }\n                internal = internal.replace(/\\&\\&\\&/g, \"&&\");\n\n                internal = internal.replace(/\\|\\|\\|/g, \"||\");\n            }\n            var evalexpr = BDTLL.Utils.evaluateExpression(internal);\n\n            return {\n            verdict: evalexpr,\n            scripts: hitScripts\n            };\n        }\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\nexport class CloudTalk {\n\tstatic extractVerdict(item: any) {\n\t\tvar index = BDTLL.StatusPriority.indexOf(BDTLL.PageStatus.SAFE);\n\n\t\tif (item.status_message instanceof Array) {\n\t\t\tindex = Math.max(index, ...item.status_message.map((status: string) => {\n\t\t\t\treturn BDTLL.StatusPriority.indexOf(status as BDTLL.PageStatus);\n\t\t\t}));\n\t\t}\n\t\telse\n\t\t\tindex = Math.max(BDTLL.StatusPriority.indexOf(item.status_message as BDTLL.PageStatus), index);\n\n\t\treturn BDTLL.StatusPriority[index];\n\t}\n\n\tstatic async interogateCloud(url: string | string[]) {\n\t\tlet response: any = await new Promise((resolve) => {\n\t\t\tvar cloudURI = \"https://nimbus.bitdefender.net/url/status\";\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"POST\", cloudURI, true);\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\t\t\tif (BDTLL.BrowserConsts) {\n\t\t\t\txhr.setRequestHeader(\"X-Nimbus-ClientId\", BDTLL.BrowserConsts.BROWSER_CLIENTID || \"\");\n\t\t\t}\n\n\t\t\tvar requestData;\n\t\t\tif (url instanceof Array) {\n\t\t\t\trequestData = url.map(item => { return { url: item }});\n\t\t\t\txhr.setRequestHeader(\"X-Is-Batch\", \"1\");\n\t\t\t} else {\n\t\t\t\trequestData = {\n\t\t\t\t\turl: url\n\t\t\t\t};\n\t\t\t}\n\n\t\t\txhr.onload = function() {\n\t\t\t\tresolve(xhr.responseText);\n\t\t\t};\n\t\t\txhr.onerror = function () {\n\t\t\t\tconsole.error(`** An error occurred during the XMLHttpRequest: ${xhr.statusText}`);\n\t\t\t  \tresolve(undefined);\n\t\t\t};\n\n\t\t\tlet stringData = JSON.stringify(requestData);\n\n\t\t\txhr.send(stringData);\n\t\t});\n\n\t\tvar respObj = JSON.parse(response);\n\t\tif (respObj instanceof Array) {\n\t\t\treturn respObj.map(item => this.extractVerdict(item));\n\t\t} else {\n\t\t\treturn this.extractVerdict(respObj);\n\t\t}\n  \t}\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\nimport { DH_CHECK_P_NOT_PRIME } from \"constants\";\n\ndeclare var browser: any;\n\ninterface ICheckedDomain {\n    verdict: string;\n    response: any;\n}\n\nexport class InterceptRequests implements BDTLL.ISwitchable {\n    checkedDomains: {[k: string]: ICheckedDomain} = {};\n    session: BDTLL.ISession;\n    injectAPHcount: number = 0;\n    _shouldInjectAPH: boolean;\n    aphListener: any;\n    searchAnalyzerListener: any;\n    threatFilterListener: any\n\n    constructor(session: BDTLL.ISession) {\n        this.session = session;\n\n        this.threatFilterListener = this.filter.bind(this);\n        this.aphListener = this.injectAntiphishing.bind(this);\n        this.searchAnalyzerListener = this.injectSearchAnalyzer.bind(this);\n    }\n\n    get shouldInjectAPH(): boolean {\n        return this._shouldInjectAPH;\n    }\n\n    set shouldInjectAPH(value: boolean) {\n        let oldValue = this._shouldInjectAPH;\n\n        this.injectAPHcount += value ? 1: -1;\n\n        this._shouldInjectAPH = (this.injectAPHcount > 0);\n\n        if (oldValue != this._shouldInjectAPH)\n            this._shouldInjectAPH ? this.startPageScanner(): this.stopPageScanner();\n    }\n\n    async filter(requestDetails: any) {\n        var verdict, whitelisted;\n        var response;\n        var domainExtracted;\n        var url = new URL(requestDetails.url);\n\n        if (url.hostname.split(\"www.\")[1] == null) {\n            domainExtracted = url.hostname;\n        } else {\n            domainExtracted = url.hostname.split(\"www.\")[1];\n        }\n\n        if (requestDetails.type != \"main_frame\" && domainExtracted in this.checkedDomains)\n            return this.checkedDomains[domainExtracted].response;\n\n        var page = await this.session.scanURL(requestDetails.url, requestDetails.tabId);\n        verdict = page.threatStatus;\n\n        if (page.sessionWhitelisted)\n            return response;\n\n        if (requestDetails.type == \"main_frame\" &&\n            [BDTLL.PageStatus.MALWARE,\n            BDTLL.PageStatus.PHISHING,\n            BDTLL.PageStatus.FRAUD,\n            BDTLL.PageStatus.MINER,\n            BDTLL.PageStatus.PUA].indexOf(verdict) > -1)\n        {\n            this.checkedDomains = {};\n            this.session.tabs[requestDetails.tabId] = page;\n\n            response = {\n                redirectUrl: BDTLL.Utils.getExtensionUrl('pages/blocked/blocked.html?status=' + verdict + '&url=' + requestDetails.url)\n            };\n        }\n        else if ([BDTLL.PageStatus.MALWARE,\n                    BDTLL.PageStatus.PHISHING,\n                    BDTLL.PageStatus.FRAUD,\n                    BDTLL.PageStatus.MINER,\n                    BDTLL.PageStatus.PUA].indexOf(verdict) > -1) {\n            response = {\n                cancel: true\n            };\n        }\n\n        this.checkedDomains[domainExtracted] = {\n            verdict: verdict,\n            response: response\n        };\n\n        return response;\n    }\n\n    injectSearchAnalyzer(tabId: any, changeInfo: any, tab: any) {\n        if (changeInfo.status == \"complete\" &&\n            tab.url.startsWith(\"http\")) {\n            browser.tabs.executeScript(tabId, {\n                file: \"/content/searchAnalyzer.js\"\n            });\n        }\n    }\n\n    injectAntiphishing(tabId: any, changeInfo: any, tab: any) {\n        if (document.readyState === \"complete\" &&\n            changeInfo.status == \"complete\" &&\n            tab.url.startsWith(\"http\")) {\n                if (BDTLL.DEBUG_MODE) {\n                    console.log(\"Injecting antiphishing...\");\n                }\n                browser.tabs.executeScript(tabId, {\n                    file: \"/content/antiphishing.js\"\n                });\n            }\n    }\n\n    startThreatFilter() {\n        browser.webRequest.onBeforeRequest.addListener(\n            this.threatFilterListener,\n            { urls: [\"http://*/*\", \"https://*/*\"], types: [\"main_frame\"] },\n            ['blocking']\n        );\n    }\n\n    stopThreatFilter() {\n        browser.webRequest.onBeforeRequest.removeListener(this.threatFilterListener);\n    }\n\n    startPageScanner() {\n        browser.tabs.onUpdated.addListener(this.aphListener);\n    }\n\n    stopPageScanner() {\n        browser.tabs.onUpdated.removeListener(this.aphListener);\n    }\n\n    startSearchAnalyzer() {\n        browser.tabs.onUpdated.addListener(this.searchAnalyzerListener);\n    }\n\n    stopSearchAnalyzer() {\n        browser.tabs.onUpdated.removeListener(this.searchAnalyzerListener);\n    }\n\n    enable(setting: BDTLL.SettingType) {\n        switch(setting) {\n            case BDTLL.SettingType.THREAT_FILTER:\n                this.startThreatFilter();\n                this.shouldInjectAPH = true;\n                break;\n            case BDTLL.SettingType.SEARCH_ANALYZER:\n                this.startSearchAnalyzer();\n                break;\n        }\n    }\n\n    disable(setting: BDTLL.SettingType) {\n        switch(setting) {\n            case BDTLL.SettingType.THREAT_FILTER:\n                this.stopThreatFilter();\n                this.shouldInjectAPH = false;\n                break;\n            case BDTLL.SettingType.SEARCH_ANALYZER:\n                this.stopSearchAnalyzer();\n                break;\n        }\n    }\n}\n","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\nexport interface IScanner {\n    internalWhitelist: Array<string>;\n    scannedLinks: number;\n    scanLink(url: string): Promise<BDTLL.PageStatus>,\n    scanPage(request: any): Promise<BDTLL.PageStatus>,\n}\n\nexport class Scanner implements IScanner {\n    internalWhitelist: Array<string>;\n    scannedLinks: number;\n    storage: BDTLL.IStorage;\n    assl: BDTLL.Iassl;\n\n    constructor(storage: BDTLL.IStorage, assl: BDTLL.Iassl) {\n        this.storage = storage;\n        storage.get('internalWhitelist').then((response: string) => {\n            response = response || \"\";\n            this.internalWhitelist = response.split(\"\");\n        });\n        this.scannedLinks = 0;\n        this.assl = assl;\n        this.listen();\n    }\n\n    async scanLink(url: string): Promise<BDTLL.PageStatus> {\n        if (this.internalWhitelist !== undefined && this.internalWhitelist.indexOf(url) > -1)\n            return BDTLL.PageStatus.SAFE;\n\n        var status = await BDTLL.CloudTalk.interogateCloud(url);\n\n        return (status as BDTLL.PageStatus);\n    }\n\n    async scanLinks(urls: string[]): Promise<Array<BDTLL.PageStatus>> {\n        var statuses = await BDTLL.CloudTalk.interogateCloud(urls);\n        this.scannedLinks += urls.length;\n\n        return statuses as BDTLL.PageStatus[];\n    }\n\n    async scanPage(request: any): Promise<BDTLL.PageStatus> {\n        var verdict = BDTLL.PageStatus.SAFE;\n\n        if (this.internalWhitelist !== undefined && this.internalWhitelist.indexOf(request.url) > -1)\n            return verdict;\n\n        var decoded_body = BDTLL.Utils.removeHTMLTags(request.body);\n        var version = await this.assl.createRegexes();\n\n        var resp = this.assl.scan(this.assl.sign,\n          this.assl.nosign,\n          request.meta,\n          request.body,\n          decoded_body,\n          request.url,\n          request.title,\n          request.domain,\n          request.scripts);\n\n        if (resp.action == \"PHISHING\") {\n            verdict = BDTLL.PageStatus.PHISHING;\n            BDTLL.Utils.reportCatch(request.url, \"TLL\", BDTLL.Consts.VERSION + \"_chrome_\" + await this.storage.get(\"date\"), resp.name);\n        }\n\n        return verdict;\n    }\n\n    listen() {\n        BDTLL.MessageService.addListener(\n            (message: any, sender: any) => {\n                if (message.command == BDTLL.Command.SCAN_LINKS) {\n                    return this.scanLinks(message.urls);\n                }\n            }\n        )\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\nimport { disconnect } from \"cluster\";\nimport { request } from \"https\";\n\ndeclare var browser: any;\n\nconst nativeApplicationName: string = 'com.extension.av.communication';\n\n// all URL's that have been blocked so far\nvar blockedPages = new Set;\nvar scannedPages: number;\n\nfunction treatPage(currentSession: Session, page: WebPage) {\n    scannedPages += 1;\n    \n    if ([BDTLL.PageStatus.MALWARE,\n        BDTLL.PageStatus.FRAUD,\n        BDTLL.PageStatus.PHISHING,\n        BDTLL.PageStatus.MINER,\n        BDTLL.PageStatus.PUA].indexOf(page.threatStatus) > -1) {\n            let blockedPage = {\n                url: page.url,\n                threatStatus: page.threatStatus,\n                timestamp: page.timestamp\n            };\n\n            if (!blockedPages.has(blockedPage.url)) {\n                currentSession.blockedPages.add(blockedPage);\n            }\n            blockedPages.add(blockedPage.url);\n\n            currentSession.sendBlockedPages();\n        }\n}\n\nexport interface ISession {\n    tabs: {[tabId: string]: WebPage};\n    scanURL(url: string, tabId: string): Promise<WebPage>;\n    scanThreat(request: any, tabId: string): Promise<WebPage>;\n}\n\nexport class WebPage {\n    url: string;\n    threatStatus: BDTLL.PageStatus;\n    scanned = false;\n    sessionWhitelisted = false;\n    trackerList: Array<string>;\n    timestamp: number;\n\n    constructor(url: string, threatStatus: BDTLL.PageStatus = null) {\n        this.url = url;\n        this.threatStatus = threatStatus;\n        this.timestamp = Date.now();\n    }\n}\n\nexport class Session implements ISession, BDTLL.ISwitchable {\n    appWhitelist: BDTLL.IWhitelist;\n    scanner: BDTLL.IScanner;\n    defaultPageStatus: BDTLL.PageStatus;\n    blockedPages = new Set;\n\n    whitelist = new Proxy<{[url: string]: WebPage}>({}, {\n        set: (obj: {[url: string]: WebPage}, url: string, newPage: WebPage, receiver: any) => {\n            obj[url] = newPage;\n            obj[url].sessionWhitelisted = true;\n\n            return true;\n        },\n        get: (obj: {[url: string]: WebPage}, url: string, receiver: any) => {\n            if (obj[url] == null)\n                this.whitelist[url] = this.history[url];\n\n            return obj[url];\n        },\n        has: (obj: {[url: string]: WebPage}, urlToTest: string) => {\n            let domain = BDTLL.Utils.extractRootDomain(urlToTest);\n\n            for (let url in obj)\n                if (domain == BDTLL.Utils.extractRootDomain(url))\n                    return true;\n\n            return false;\n        }\n    });\n\n    tabs = new Proxy<{[tabId: string]: WebPage}>({}, {\n        set: (obj: {[tabId: string]: WebPage}, tabId: string, newPage: WebPage, receiver: any) => {\n            // obj[tabId] = JSON.parse(JSON.stringify(newPage));\n            obj[tabId] = BDTLL.Utils.safelyParseJSON(newPage);\n            return true;\n        }\n    });\n\n    HISTORY_MAX_LENGTH = 20;\n    history = new Proxy<{[url: string]: WebPage}>({}, {\n            set: (obj: {[url: string]: WebPage}, url: string, newPage: WebPage, receiver: any) => {\n                var count = 0, oldestTimestamp = Date.now(), oldestKey = \"\";\n\n                for (let key in obj) {\n                    if (obj[key].timestamp < oldestTimestamp)\n                        oldestKey = key;\n                    count++;\n                }\n\n                if (count > this.HISTORY_MAX_LENGTH)\n                    delete obj[oldestKey];\n\n                // obj[url] = JSON.parse(JSON.stringify(newPage));\n                obj[url] = BDTLL.Utils.safelyParseJSON(newPage);\n                obj[url].timestamp = Date.now();\n                return true;\n            },\n            get: (obj: {[url: string]: WebPage}, url: string, receiver: any) => {\n                var page = obj[url];\n\n                if (page == null) {\n                    page = new WebPage(url);\n                    obj[url] = page;\n                } else {\n                    page.timestamp = Date.now();\n                }\n\n                return page;\n            }\n        });\n\n    processPage: {[key: string]: {processor: (request: any) => WebPage, active: boolean}} = {\n        [BDTLL.SettingType.THREAT_FILTER]: {\n            processor: this.scanThreat.bind(this),\n            active: false\n        }\n    };\n\n    constructor(appWhitelist: BDTLL.IWhitelist, scanner: BDTLL.IScanner) {\n        this.appWhitelist = appWhitelist;\n        this.scanner = scanner;\n        scannedPages = 0;\n\n        this.listen();\n    }\n\n    async sessionWhitelist(tabId: string) {\n        this.whitelist[this.tabs[tabId].url] = this.tabs[tabId];\n        return true;\n    }\n\n    async handlePageScan(request: any, tabId: string) {\n        try {\n            var page: WebPage;\n\n            for (let setting in this.processPage)\n                if (this.processPage[setting].active)\n                    page = await this.processPage[setting].processor(request);\n\n            this.tabs[tabId] = page;\n            this.setBrowserAction(tabId, page);\n\n            if (request.url in this.whitelist)\n                return page;\n\n            if ([BDTLL.PageStatus.MALWARE,\n                BDTLL.PageStatus.FRAUD,\n                BDTLL.PageStatus.PHISHING,\n                BDTLL.PageStatus.MINER,\n                BDTLL.PageStatus.PUA].indexOf(page.threatStatus) > -1) {\n                    browser.tabs.update(tabId,\n                        {\n                            url: \"/pages/blocked/blocked.html?status=\" +\n                                page.threatStatus +\n                                \"&url=\" +\n                                page.url\n                        });\n            }\n\n            return page;\n        } catch(err) { }\n    }\n\n    async scanURL(url: string) {\n        try {\n            var page = this.history[url]; // This can be the default value when a WebPage is created\n\n            if (this.appWhitelist.isWhitelisted(url)) {\n                // page = JSON.parse(JSON.stringify(page))\n                page = BDTLL.Utils.safelyParseJSON(page);\n                page.threatStatus = BDTLL.PageStatus.WHITELISTED\n                return page;\n            }\n\n            if (url in this.whitelist) {\n                page = this.whitelist[url];\n            }\n\n            if (page.threatStatus == null) {\n                page.threatStatus = await this.scanner.scanLink(url);\n                treatPage(this, page);\n            }\n\n            return page;\n        } catch(err) { }\n    }\n\n    async scanThreat(request: any) {\n        try {\n            var page = this.history[request.url]; // This can be the default value when a WebPage is created\n\n            if (this.appWhitelist.isWhitelisted(request.url)) {\n                // page = JSON.parse(JSON.stringify(page))\n                page = BDTLL.Utils.safelyParseJSON(page);\n                page.threatStatus = BDTLL.PageStatus.WHITELISTED\n                return page;\n            }\n\n            if (request.url in this.whitelist) {\n                page = this.whitelist[request.url];\n            }\n\n            if (!page.scanned) {\n                var verdict = await this.scanner.scanPage(request);\n                page.threatStatus = (verdict == BDTLL.PageStatus.PHISHING) ? verdict: page.threatStatus\n                page.scanned = true;\n\n                treatPage(this, page);\n            }\n\n            if (page.threatStatus === null) {\n                page = await this.scanURL(page.url);\n            }\n\n            return page;\n        } catch(err) { }\n    }\n\n    async getPageInfo(tabId: string | Promise<string>): Promise<WebPage> {\n        try {\n            tabId = await tabId;\n\n            if (!(tabId in this.tabs))\n                this.tabs[tabId] = new WebPage(\"\", this.defaultPageStatus);\n\n            var page = this.tabs[tabId];\n\n            if (!this.processPage[BDTLL.SettingType.THREAT_FILTER].active)\n                page.threatStatus = BDTLL.PageStatus.DISABLED;\n\n            return page;\n        } catch(err) { }\n    }\n\n    setBrowserAction(tabId: string, page: WebPage) {\n        try {\n            let threatStatus = BDTLL.PageStatus.SAFE;\n            if (typeof page !== 'undefined') {\n                threatStatus =\n                    this.processPage[BDTLL.SettingType.THREAT_FILTER].active ?\n                    page.threatStatus :\n                    this.defaultPageStatus;\n            }\n\n            if (typeof tabId !== 'undefined') {\n                // setIcon is not supported for android devices\n                // https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/browserAction\n                if (!navigator.userAgent.match(/Android/i)) {\n                    browser.browserAction.setIcon({\n                        path: BDTLL.toBarIcon[threatStatus],\n                        tabId: +tabId\n                    });\n                }\n            }\n        } catch(err) { }\n    }\n\n    getCurrentBrowser() {\n        try {\n            if (navigator.userAgent.indexOf(\"Firefox\") > -1) {\n                return 'firefox';\n            }\n            if (navigator.userAgent.indexOf(\"Chrome\") > -1) {\n                return 'chrome';\n            }\n        } catch(err) { }\n    }\n\n    sendBlockedPages() {\n        let currentBrowser = this.getCurrentBrowser();\n        let pagesBlocked = Array.from(this.blockedPages);\n\n        if (this.blockedPages.size > 0) {\n            let message = {\n                request: 'blockedPages',\n                browser: currentBrowser,\n                pagesBlocked: pagesBlocked\n            };\n\n            browser.runtime.sendNativeMessage(nativeApplicationName, message).then((response: any) => {\n                if (BDTLL.DEBUG_MODE) {\n                    console.log(\"Blocked pages sent succesfully!\");\n                    console.log(response.service_status);\n                }\n\n                this.blockedPages.clear;\n                this.blockedPages = new Set;\n            }).catch((error: any) => {\n                if (BDTLL.DEBUG_MODE) {\n                    console.log(error);\n                }\n            });\n        }\n    }\n\n    enable(setting: BDTLL.SettingType): void {\n        switch(setting) {\n            case BDTLL.SettingType.THREAT_FILTER:\n                this.processPage[BDTLL.SettingType.THREAT_FILTER].active = true;\n                this.defaultPageStatus = BDTLL.PageStatus.SAFE;\n                break;\n        }\n    }\n\n    disable(setting: BDTLL.SettingType): void {\n        switch(setting) {\n            case BDTLL.SettingType.THREAT_FILTER:\n                this.processPage[BDTLL.SettingType.THREAT_FILTER].active = false;\n                this.defaultPageStatus = BDTLL.PageStatus.DISABLED;\n                break;\n        }\n    }\n\n    listen() {\n        var that = this;\n\n        setInterval(() => {\n            scannedPages += that.scanner.scannedLinks;\n            scannedPages -= 1;\n\n            if (scannedPages > 0) {\n                let message = {\n                    request: 'scannedPages',\n                    browser: that.getCurrentBrowser(),\n                    scannedPages: scannedPages\n                }\n                browser.runtime.sendNativeMessage(nativeApplicationName, message).then((response: any) => {\n                    if (BDTLL.DEBUG_MODE) {\n                        console.log(\"Scanned pages sent succesfully!\");\n                        console.log(response.service_status);\n                    }\n\n                    that.scanner.scannedLinks = 0;\n                    scannedPages = 0;\n                }).catch((error: any) => {\n                    if (BDTLL.DEBUG_MODE) {\n                        console.log(error);\n                    }\n                });\n            }\n        }, BDTLL.REPORT_SCANNED_PAGES_TIME_INTERVAL); // 60000 - debug / 300000 - release\n\n        browser.tabs.onUpdated.addListener(\n            (tabId: any, changeInfo: any, tab: any) => {\n                if (changeInfo.status == \"complete\") {\n                    let that = this;\n                    browser.tabs.query({\n                        active: true,\n                        currentWindow: true\n                    }).then(\n                        (tabs: any) => {\n                            if (tabId !== undefined) {\n                                if (tabs[0] !== undefined && 'url' in tabs[0] && that.tabs[tabId] !== undefined && 'threatStatus' in that.tabs[tabId]) {\n                                    if (tabs[0].url === 'chrome://newtab/' || tabs[0].url === 'about:home' || tabs[0].url === 'about:blank') {\n                                        that.tabs[tabId] = new WebPage(tabs[0].url, that.defaultPageStatus);\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/blocked/blocked.html?status=phishing&url=\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.PHISHING;\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/blocked/blocked.html?status=malware&url=\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.MALWARE;\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/blocked/blocked.html?status=fraud&url=\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.FRAUD;\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/blocked/blocked.html?status=miner&url=\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.MINER;\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/blocked/blocked.html?status=pua&url=\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.PUA;\n                                    }\n\n                                    if (tabs[0].url.indexOf(\"/pages/settings/settings.html\") > 0) {\n                                        that.tabs[tabId].threatStatus = BDTLL.PageStatus.SAFE;\n                                    }\n                                } else {\n                                    that.tabs[tabId].threatStatus = BDTLL.PageStatus.SAFE;\n                                }\n\n                                that.setBrowserAction(tabId, that.tabs[tabId]);\n                            }\n                        }\n                    ).catch((err: any) => { });\n\n                    if (!(tabId in this.tabs))\n                        this.tabs[tabId] = new WebPage(\"\", this.defaultPageStatus)\n                    this.setBrowserAction(tabId, this.tabs[tabId]);\n                }\n            }\n        );\n\n        browser.tabs.onRemoved.addListener(\n            (tabId: string, removeInfo: any) => {\n                delete this.tabs[tabId];\n            }\n        );\n\n        BDTLL.MessageService.addListener(\n            (message: any, sender: any) => {\n                switch(message.command) {\n                    case BDTLL.Command.SCAN_PAGE:\n                        return this.handlePageScan(message.request, sender.tab.id);\n                    case BDTLL.Command.GET_PAGE_INFO:\n                        return this.getPageInfo(BDTLL.Utils.getCurrentTabId());\n                    case BDTLL.Command.SESSION_WHITELIST:\n                        return this.sessionWhitelist(sender.tab.id);\n                }\n            }\n        );\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\ndeclare var browser: any;\n\nexport interface ISwitchable {\n    enable(setting: BDTLL.SettingType): void;\n    disable(setting: BDTLL.SettingType): void;\n}\n\nexport interface ISettings {\n    storage: BDTLL.IStorage;\n    get(setting: BDTLL.SettingType): Promise<boolean>;\n    set(setting: BDTLL.SettingType, value: boolean): Promise<boolean>;\n    listen(): void;\n}\n\nexport class Settings implements ISettings {\n    storage: BDTLL.IStorage;\n    modules: Array<BDTLL.ISwitchable>;\n\n    constructor(storage: BDTLL.IStorage, modules: Array<BDTLL.ISwitchable>) {\n        this.storage = storage;\n        this.modules = modules;\n        this.init(BDTLL.SettingType.THREAT_FILTER);\n        this.init(BDTLL.SettingType.SEARCH_ANALYZER);\n        this.listen();\n    }\n\n    async init(setting: BDTLL.SettingType) {\n        this.storage.get(setting).then((value: any) => {\n            var val = (value == null? true: (value === \"true\" || value === true));\n            this.set(setting, val);\n        });\n    }\n\n    async get(setting: BDTLL.SettingType) {\n        var value = await this.storage.get(setting);\n\n        return (value === \"true\" || value === true);\n    }\n\n    async set(setting: BDTLL.SettingType, value: boolean) {\n        for (let module of this.modules)\n            value ? module.enable(setting) : module.disable(setting);\n\n        return this.storage.set(setting, String(value));\n    }\n\n    listen() {\n        BDTLL.MessageService.addListener(\n            (message: any, sender: any) => {\n                if (message.command == BDTLL.Command.GET_SETTING) {\n                    return this.get(message.type)\n                } else if(message.command == BDTLL.Command.SET_SETTING) {\n                    return this.set(message.type, message.value);\n                }\n            }\n        );\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\ndeclare var browser: any;\n\nexport interface IStorage {\n    set(key: string, value: any): Promise<any>;\n    get(key: string): Promise<any>;\n}\n\nexport class Storage implements IStorage {\n    async get (key: string) {\n        return (await browser.storage.local.get(key))[key];\n    }\n\n    async set (key: string, value: any) {\n        var obj = { [key]: value };\n        return browser.storage.local.set(obj);\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\nexport class Update {\n\tstorage: BDTLL.IStorage;\n\tscanner: BDTLL.IScanner;\n\tassl: BDTLL.Iassl;\n\tinterval = 14400000; // 4 hours between updates\n\n\tconstructor(storage: BDTLL.IStorage, scanner: BDTLL.IScanner, assl: BDTLL.Iassl) {\n\t\tthis.storage = storage;\n\t\tthis.scanner = scanner;\n\t\tthis.assl = assl;\n\t\tthis.checkUpdate();\n\t\tsetInterval(this.checkUpdate, this.interval);\n\t\tthis.listen();\n\t}\n\n\tasync checkUpdate() {\n\t\ttry {\n\t\t\tvar currentTime = (new Date()).getTime();\n\t\t\tvar storedTime = parseInt(await this.storage.get('time'));\n\n\t\t\tif (!(isNaN(storedTime) || storedTime + this.interval < currentTime))\n\t\t\t\treturn 0;\n\n\t\t\tthis.storage.set('time', currentTime);\n\t\t\tthis.update().catch((reason: any) => {\n\t\t\t\t// can't update: check reason\n\t\t\t});\n\t\t} catch (err) { }\n\t}\n\n\tasync update() {\n\t\tvar date = new Date();\n\t\tthis.storage.set('date', date.toLocaleDateString());\n\n\t\tthis.requestInfo(\"ph_sign.slf\").then(async (xhr: XMLHttpRequest) => {\n\t\t\tthis.assl.sign = new Array();\n            this.assl.nosign = new Array();\n            this.storage.set(\"slfContent\", xhr.responseText);\n            var version = await this.assl.createRegexes();\n\t\t});\n\n\t\tthis.requestInfo(\"ph_white.txt\").then((xhr: XMLHttpRequest) => {\n            this.storage.set(\"internalWhitelist\", xhr.responseText).then(() => {\n\t\t\t\tthis.scanner.internalWhitelist = xhr.responseText.split(\"\\n\");\n\t\t\t});\n\t\t});\n\t}\n\n\tasync requestInfo(filename: string) {\n\t\tvar sURL = 'https://nimbus.bitdefender.net/tll/update?file=' + filename;\n\t\tvar oRequest = BDTLL.Utils.xHTTPRequest();\n\t\toRequest.nativeXhr.open(\"GET\", sURL, true);\n\t\tif (BDTLL.BrowserConsts) {\n\t\t\toRequest.nativeXhr.setRequestHeader(\"X-Nimbus-ClientId\", BDTLL.BrowserConsts.BROWSER_CLIENTID || \"\");\n\t\t}\n\n\t\treturn oRequest.send();\n\t}\n\n\tlisten() {\n\t\tBDTLL.MessageService.addListener(\n\t\t\t(message: any, sender: any) => {\n\t\t\t\tif (message.command == BDTLL.Command.GET_LAST_UPDATE)\n\t\t\t\t\treturn this.storage.get(\"date\");\n\t\t\t}\n\t\t);\n\t}\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL\";\n\ndeclare var browser: any;\n\nexport interface IWhitelist {\n    whitelistAdd(url: string): Promise<boolean>;\n    whitelistRemove(url: string): Promise<boolean>;\n    getWhitelist(): Promise<Array<string>>;\n    isWhitelisted(url: string): boolean;\n}\n\nexport class Whitelist implements IWhitelist {\n    userWhitelist: Array<string>;\n    storage: BDTLL.IStorage;\n\n    constructor(storage: BDTLL.IStorage) {\n        this.storage = storage;\n\n        storage.get(\"userWhitelist\").then(list => {\n            if (typeof(list) == \"string\" && list != \"\")\n                this.userWhitelist = list.split(\",\");\n            else\n                this.userWhitelist = [];\n        });\n\n        this.listen();\n    }\n\n    async whitelistAdd(url: string) {\n        var domain = BDTLL.Utils.extractRootDomain(url);\n\n        if (domain && this.userWhitelist.indexOf(domain) < 0) {\n            this.userWhitelist = this.userWhitelist.concat(domain);\n            this.storage.set(\"userWhitelist\", this.userWhitelist.join());\n        }\n\n        return true;\n    }\n\n    async whitelistRemove(url: string) {\n        var domain = BDTLL.Utils.extractRootDomain(url);\n\n        if (domain && this.userWhitelist.indexOf(domain) > -1) {\n            this.userWhitelist.splice(this.userWhitelist.indexOf(domain), 1);\n            this.storage.set(\"userWhitelist\", this.userWhitelist.join());\n        }\n\n        return true;\n    }\n\n    isWhitelisted(url: string) {\n        var domain = BDTLL.Utils.extractRootDomain(url);\n\n        return this.userWhitelist.indexOf(domain) > -1;\n    }\n\n    async getWhitelist(): Promise<Array<string>> {\n        return this.userWhitelist;\n    }\n\n    listen() {\n        BDTLL.MessageService.addListener(\n            (message: any, sender: any) => {\n                switch(message.command) {\n                    case BDTLL.Command.GET_WHITELIST:\n                        return this.getWhitelist();\n                    case BDTLL.Command.WHITELIST_ADD:\n                        return this.whitelistAdd(message.value);\n                    case BDTLL.Command.WHITELIST_REMOVE:\n                        return this.whitelistRemove(message.value);\n                }\n        });\n    }\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nexport enum BrowserConsts {\n    BROWSER_CLIENTID = \"a4c35c82-b0b5-46c3-b641-41ed04075269\"\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nexport const DEBUG_MODE: boolean = (process.env.NODE_ENV === 'development');\nexport const REPORT_SCANNED_PAGES_TIME_INTERVAL: number = (process.env.NODE_ENV === 'development' ? 60000 : 300000);\n\nexport enum Consts {\n    //VERSION\n    VERSION = \"[Version]\",\n\n    // base url to open when clicking on a search results button\n    SEARCH_INFO_URL = \"[SearchInfoUrl]\",\n    FEEDBACK_URL = \"[FeedbackUrl]\",\n\n    COMPANY_NAME = \"[CompanyName]\",\n    PRODUCT_NAME = \"[ProductName]\",\n}\n\n// Supported search engines\nexport enum SearchEngine {\n    SEARCH_GOOGLE = \"google\",\n    SEARCH_YAHOO = \"search.yahoo\",\n    SEARCH_YAHOO_JP = \"search.yahoo.co.jp\",\n    SEARCH_BING = \"bing\",\n    SEARCH_DUCKDUCKGO = \"duckduckgo\",\n}\n\nexport const SCREEN_UI = {\n    MAIN : 1,\n    FEEDBACK : 2,\n    SETTINGS : 4\n}\n\nexport enum Command {\n    GET_SETTING,\n    SET_SETTING,\n    GET_WHITELIST,\n    WHITELIST_ADD_FRONTEND,\n    WHITELIST_ADD,\n    WHITELIST_REMOVE,\n    SESSION_WHITELIST,\n    OPEN_SETTINGS,\n    OPEN_FEEDBACK,\n    OPEN_FEEDBACK_MESSAGE,\n    GET_LAST_UPDATE,\n    GET_PAGE_INFO,\n    SCAN_LINKS,\n    SCAN_PAGE,\n}\n\nexport enum PageStatus {\n    SAFE = \"safe\",\n    MALWARE = \"malware\",\n    PHISHING = \"phishing\",\n    FRAUD = \"fraud\",\n    MINER = \"miner\",\n    PUA = \"pua\",\n    UNTRUSTED = \"untrusted\",\n    WHITELISTED = \"whitelisted\",\n    DISABLED = \"disabled\"\n}\n\nexport enum StatusIcon {\n    SAFE = \"BDTLL_icon_ok\",\n    CRITICAL = \"BDTLL_icon_critical\",\n    ALERT = \"BDTLL_icon_alert\",\n    WHITELISTED = \"BDTLL_icon_whitelisted\",\n    DISABLED = \"BDTLL_icon_disabled\"\n}\n\nexport enum StatusGif {\n    SAFE = \"BDTLL_animation_ok\",\n    CRITICAL = \"BDTLL_animation_blocked\",\n    ALERT = \"BDTLL_animation_blocked\",\n    WHITELISTED = \"BDTLL_animation_disabled\",\n    DISABLED = \"BDTLL_animation_disabled\"\n}\n\nexport enum BarIcon {\n    SAFE = \"img/Ico_Bar_Green.png\",\n    CRITICAL = \"img/Ico_Bar_Red.png\",\n    ALERT = \"img/Ico_Bar_Yellow.png\",\n    WHITELISTED = \"img/Ico_Bar_Whitelisted.png\",\n    DISABLED = \"img/Ico_Bar_Disabled.png\"\n}\n\nexport enum SettingType {\n    THREAT_FILTER = \"threatFilter\",\n    SEARCH_ANALYZER = \"searchAnalyzer\",\n    EXCEPTION_LIST = \"exceptionList\",\n}\n\nlet StatusPriority = [PageStatus.DISABLED,\n    PageStatus.WHITELISTED,\n    PageStatus.SAFE,\n    PageStatus.UNTRUSTED,\n    PageStatus.PHISHING,\n    PageStatus.FRAUD,\n    PageStatus.MALWARE,\n    PageStatus.MINER,\n    PageStatus.PUA];\n\nlet toBarIcon: {[key: string]: BarIcon} = {\n    [PageStatus.SAFE]: BarIcon.SAFE,\n    [PageStatus.DISABLED]: BarIcon.DISABLED,\n    [PageStatus.WHITELISTED]: BarIcon.WHITELISTED,\n    [PageStatus.UNTRUSTED]: BarIcon.ALERT,\n    [PageStatus.MALWARE]: BarIcon.CRITICAL,\n    [PageStatus.FRAUD]: BarIcon.CRITICAL,\n    [PageStatus.PHISHING]: BarIcon.CRITICAL,\n    [PageStatus.MINER]: BarIcon.CRITICAL,\n    [PageStatus.PUA]: BarIcon.CRITICAL\n};\n\nexport {StatusPriority, toBarIcon}\n","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL_common\";\nimport { Session } from \"inspector\";\n\ndeclare var browser: any;\n\nexport interface IMessage {\n    command?: BDTLL.Command,\n    type?: BDTLL.SettingType,\n    value?: any,\n}\n\nexport class  MessageService{\n    public static async messageBackground(message: any): Promise<any> {\n        return browser.runtime.sendMessage(message);\n    }\n\n    public static async messageForeground(tabId: string, message: any): Promise<any> {\n        return browser.tabs.sendMessage(tabId, message).catch((e: any) => {\n            // known error\n            if (e.message == \"The message port closed before a response was received.\")\n                return;\n\n            throw e;\n        });\n    }\n\n    public static addListener(callback: any) {\n        browser.runtime.onMessage.addListener(callback);\n    }\n\n    public static removeListener(listener: any) {\n        browser.runtime.onMessage.removeListener(listener);\n    }\n\n    public static hasListener(listener: any) {\n        browser.runtime.onMessage.hasListener(listener);\n    }\n\n}","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\ndeclare var browser : any;\n\nimport * as BDTLL from \"../BDTLL_common\"\nimport { WebPage } from \"../background/session\";\n\nexport class Utils {\n    static removeHTMLTags(strInput: string) {\n        strInput = strInput.replace(/&(lt|gt);/g, function(strMatch: string, p1: string) {\n        return (p1 == \"lt\") ? \"<\" : \">\";\n        });\n        var strTagStrippedText = strInput.replace(/<\\/?[^>]+(>|$)/g, \"\");\n        return strTagStrippedText;\n    }\n\n    static trim(stringToTrim: string) {\n        return stringToTrim.replace(/^\\s+|\\s+$/g, \"\");\n    }\n\n    static ltrim(stringToTrim: string) {\n        return stringToTrim.replace(/^\\s+/, \"\");\n    }\n\n    static rtrim(stringToTrim: string) {\n        return stringToTrim.replace(/\\s+$/, \"\");\n    }\n\n    static constructWhitelist() {\n        var white = null;\n\n            if (typeof(localStorage['internalWhitelist']) != 'undefined' && localStorage['internalWhitelist']) {\n            white = localStorage['internalWhitelist'].split('\\n');\n        }\n\n        return white;\n    }\n\n    static xHTTPRequest() {\n        var xhr = new XMLHttpRequest();\n\n        var promiseXhr = {\n            nativeXhr: xhr,\n            send: function(data: any = null) {\n                return new Promise(function (resolve, reject) {\n                    promiseXhr.nativeXhr.onload = function(e){\n                        if (promiseXhr.nativeXhr.status === 200) {\n                            resolve(promiseXhr.nativeXhr);\n                        } else {\n                            reject(Error('XMLHttpRequest failed; error code:' + promiseXhr.nativeXhr.statusText));\n                        }\n                    },\n                    promiseXhr.nativeXhr.onerror = reject;\n                    promiseXhr.nativeXhr.send(data);\n                });\n            }\n        };\n\n        return promiseXhr;\n    }\n\n    static promiseTimeout(ms: number, promise: any) {\n        // Create a promise that rejects in ms milliseconds\n        let timeout = new Promise((resolve, reject) => {\n            let id = setTimeout(() => {\n                clearTimeout(id);\n                reject('Timed out in '+ ms + 'ms.')\n            }, ms);\n        });\n\n        // Return the fastest between promise(the actual job we have to do) and the timeout created earlier\n        return Promise.race([\n            promise,\n            timeout\n        ]);\n    }\n\n    static getBrowser() {\n        try {\n            var extensionURL = browser.extension.getURL(\"\");\n            if (extensionURL.lastIndexOf(\"chrome-extension\", 0) === 0) {\n                browser = \"chrome\";\n            } else if (extensionURL.lastIndexOf(\"moz-extension\", 0) === 0) {\n                browser = \"firefox\";\n            }\n        } catch (err) {\n        }\n\n        return browser;\n    }\n\n    // Determine if the URL is a search result and should have the links scanned\n    static get_domain_for_link_scan(hostURL: string) {\n        try {\n            const url = new URL(hostURL);\n\n            if (url.hostname.indexOf(BDTLL.SearchEngine.SEARCH_GOOGLE) >= 0) {\n                return BDTLL.SearchEngine.SEARCH_GOOGLE;\n            }\n            if (url.hostname.indexOf(BDTLL.SearchEngine.SEARCH_YAHOO_JP) >= 0) {\n                return BDTLL.SearchEngine.SEARCH_YAHOO_JP;\n            }\n            if (url.hostname.indexOf(BDTLL.SearchEngine.SEARCH_YAHOO) >= 0) {\n                return BDTLL.SearchEngine.SEARCH_YAHOO;\n            }\n            if (url.hostname.indexOf(BDTLL.SearchEngine.SEARCH_BING) >= 0) {\n                return BDTLL.SearchEngine.SEARCH_BING;\n            }\n            if (url.hostname.indexOf(BDTLL.SearchEngine.SEARCH_DUCKDUCKGO) >= 0) {\n                return BDTLL.SearchEngine.SEARCH_DUCKDUCKGO;\n            }\n        } catch (exception) {\n            return null;\n        }\n\n        return null;\n    }\n\n    static get_localized_text(key: string): string {\n        return browser.i18n.getMessage(key);\n        // return \"LOREM IPSUM\";\n    }\n\n    static getLanguage() {\n        return browser.i18n.getUILanguage()\n    }\n\n    static reportCatch(url: string, prodInfo: string, prodVers: string, sign: string) {\n        var catchRepUrl = \"https://nimbus.bitdefender.net/report/aphish?JSVersion=J1\" +\n        \"&LID=\" + encodeURIComponent(\"N/A\") +\n        \"&PhDatsVersion=7&ProdInfo=\" + encodeURIComponent(prodInfo) +\n        \"&ProdVers=\" + encodeURIComponent(prodVers) +\n        \"&PhASSLHitRules=\" + encodeURIComponent(sign) +\n        \"&Type=catch&Url=\" + encodeURIComponent(url);\n\n        var oRequest = this.xHTTPRequest();\n\n        oRequest.nativeXhr.open(\"GET\", catchRepUrl, true);\n        if (BDTLL.BrowserConsts) {\n        oRequest.nativeXhr.setRequestHeader(\"X-Nimbus-ClientId\", BDTLL.BrowserConsts.BROWSER_CLIENTID || \"\");\n        }\n        oRequest.send(null).then( function(aEvt) {\n        if (oRequest.nativeXhr.readyState == 4) {\n            if (oRequest.nativeXhr.status == 200) {\n            //this.log(\"catch report succeeded\");\n            }\n        }\n        });\n    }\n\n    static reportAnon(ads: string) {\n        // TODO: OEM change; unused ?!\n        var anonRepUrl = \"https://nimbus.bitdefender.net/report/aphish\";\n\n        var oRequest = this.xHTTPRequest();\n\n        var req_params_obj = {\n        'ProdInfo': 'TLL',\n        'ProdVers': BDTLL.Consts.VERSION,\n        'Type': 'fb_ads_full',\n        'adds': ads\n        }\n\n        var req_params = JSON.stringify(req_params_obj);\n        oRequest.nativeXhr.open(\"POST\", anonRepUrl, true);\n        oRequest.nativeXhr.setRequestHeader('Content-Type', 'application/json');\n        if (BDTLL.BrowserConsts) {\n        oRequest.nativeXhr.setRequestHeader(\"X-Nimbus-ClientId\", BDTLL.BrowserConsts.BROWSER_CLIENTID || \"\");\n        }\n        oRequest.send(req_params).then(function(aEvt) {\n        if (oRequest.nativeXhr.readyState == 4) {\n            if (oRequest.nativeXhr.status == 200) {\n\n            }\n        }\n        });\n    }\n\n    static safelyParseJSON (webPage: WebPage) {\n        let stringifiedWebPage = JSON.stringify(webPage);\n        let resultWebPage = undefined;\n\n        try {\n            resultWebPage = JSON.parse(stringifiedWebPage);\n        } catch (err) {\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\n            // JSON parse error -> Create a default WebPage object to return\n            resultWebPage = new WebPage(webPage.url);\n        }\n\n        return resultWebPage;\n    }\n\n    static evaluateExpression(expr: string) {\n        var evaluatedExpression;\n        var start, end;\n        var innerExpr;\n        while (expr.indexOf('(') >= 0) {\n        end = expr.indexOf(')');\n        start = expr.substr(0, end).lastIndexOf('(');\n        if (start > end) {\n            return false;\n        }\n        innerExpr = expr.substr(start + 1, end - start - 1);\n        expr = expr.substr(0, start) + this.evaluateExpression(innerExpr) + expr.substr(end + 1);\n        }\n        var terms = expr.split(\" \");\n        for (var i = 0; i < terms.length; i++) {\n        if (terms[i].length == 0) {\n            terms.splice(i, 1);\n            i--;\n        }\n        }\n        var left;\n        for (i = 0; i < terms.length; i++) {\n        if (terms[i] == \"&&\") {\n            if (terms[i - 1] == \"false\" || terms[i + 1] == \"false\") {\n            terms[i - 1] = \"false\";\n            } else {\n            terms[i - 1] = \"true\";\n            }\n            terms.splice(i, 2);\n            i--;\n        } else if (terms[i] == \"==\") {\n            if (terms[i - 1] == terms[i + 1]) {\n            terms[i - 1] = \"true\";\n            } else {\n            terms[i - 1] = \"false\";\n            }\n            terms.splice(i, 2);\n            i--;\n        }\n        }\n        for (i = 0; i < terms.length; i++) {\n        if (terms[i] == \"true\") {\n            return true;\n        }\n        }\n        return false;\n    }\n\n    static trimURLQuery(url: string) {\n        return url.split('?')[0];\n    }\n\n    static extractHostname(url: string) {\n        var hostname;\n        //find & remove protocol (http, ftp, etc.) and get hostname\n\n        if (url.indexOf(\"://\") > -1) {\n        hostname = url.split('/')[2];\n        }\n        else {\n        hostname = url.split('/')[0];\n        }\n\n        //find & remove port number\n        hostname = hostname.split(':')[0];\n        //find & remove \"?\"\n        hostname = hostname.split('?')[0];\n\n        return hostname;\n    }\n\n    static extractRootDomain(url: string) {\n        var domain = this.extractHostname(url),\n            splitArr = domain.split('.'),\n            arrLen = splitArr.length;\n\n        if (arrLen > 2) {\n            domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];\n\n            if (this.isSecondDomain(domain)) {\n                domain = splitArr[arrLen - 3] + '.' + domain;\n            }\n        }\n\n        return domain;\n    }\n\n    static validURL(str: string) {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locater\n        if(!pattern.test(str)) {\n        return false;\n        } else {\n        return true;\n        }\n    }\n\n    static anotherProtectionDetected(doc: any) {\n        var windows_wp_id = \"bd_nd_B937DB990D1548698380D65CF906E308\";\n        var by_id = doc.getElementById(windows_wp_id);\n        var by_class = doc.getElementsByClassName(windows_wp_id);\n\n        return ((null !== by_id && \"undefined\" !== typeof(by_id)) ||\n                (null !== by_class && \"undefined\" !== typeof(by_class) &&\n                0 !== by_class.length));\n    }\n\n    static feedbackEnabled() {\n        return (null !== BDTLL.Consts.FEEDBACK_URL &&\n                \"undefined\" !== typeof(BDTLL.Consts.FEEDBACK_URL) &&\n                0 < BDTLL.Consts.FEEDBACK_URL.length);\n    }\n\n    static async getCurrentTabId(): Promise<string> {\n        let tabs = await browser.tabs.query({ active: true, currentWindow: true });\n        return tabs[0].id;\n    }\n\n    static async getCurrentTabUrl(): Promise<string> {\n        let tabs = await browser.tabs.query({ active: true, currentWindow: true });\n        return tabs[0].url;\n    }\n\n    static getExtensionUrl = browser.runtime.getURL;\n\n    static async getSettingsTab(): Promise<any> {\n        var tabs = await browser.tabs.query({\n            url: this.getExtensionUrl(\"pages/settings/settings.html\")\n        });\n        return tabs.length > 0 ? tabs[0]: null;\n    }\n\n    static isSecondDomain(domain: string): boolean {\n        var secondDomains = [\"com.ac\", \"net.ac\", \"gov.ac\", \"org.ac\", \"mil.ac\", \"co.ae\", \"net.ae\", \"gov.ae\", \"ac.ae\", \"sch.ae\", \"org.ae\", \"mil.ae\", \"pro.ae\", \"name.ae\", \"com.af\",\n \"edu.af\", \"gov.af\", \"net.af\", \"org.af\", \"com.al\", \"edu.al\", \"gov.al\", \"mil.al\", \"net.al\", \"org.al\", \"ed.ao\", \"gv.ao\", \"og.ao\", \"co.ao\", \"pb.ao\", \"it.ao\", \"com.ar\", \"edu.ar\", \"gob.ar\",\n \"gov.ar\", \"gov.ar\", \"int.ar\", \"mil.ar\", \"net.ar\", \"org.ar\", \"tur.ar\", \"gv.at\", \"ac.at\", \"co.at\", \"or.at\", \"com.au\", \"net.au\", \"org.au\", \"edu.au\", \"gov.au\", \"csiro.au\", \"asn.au\",\n \"id.au\", \"org.ba\", \"net.ba\", \"edu.ba\", \"gov.ba\", \"mil.ba\", \"unsa.ba\", \"untz.ba\", \"unmo.ba\", \"unbi.ba\", \"unze.ba\", \"co.ba\", \"com.ba\", \"rs.ba\", \"co.bb\", \"com.bb\", \"net.bb\", \"org.bb\",\n \"gov.bb\", \"edu.bb\", \"info.bb\", \"store.bb\", \"tv.bb\", \"biz.bb\", \"com.bh\", \"info.bh\", \"cc.bh\", \"edu.bh\", \"biz.bh\", \"net.bh\", \"org.bh\", \"gov.bh\", \"com.bn\", \"edu.bn\", \"gov.bn\", \"net.bn\",\n \"org.bn\", \"com.bo\", \"net.bo\", \"org.bo\", \"tv.bo\", \"mil.bo\", \"int.bo\", \"gob.bo\", \"gov.bo\", \"edu.bo\", \"adm.br\", \"adv.br\", \"agr.br\", \"am.br\", \"arq.br\", \"art.br\", \"ato.br\", \"b.br\", \"bio.br\",\n \"blog.br\", \"bmd.br\", \"cim.br\", \"cng.br\", \"cnt.br\", \"com.br\", \"coop.br\", \"ecn.br\", \"edu.br\", \"eng.br\", \"esp.br\", \"etc.br\", \"eti.br\", \"far.br\", \"flog.br\", \"fm.br\", \"fnd.br\", \"fot.br\",\n \"fst.br\", \"g12.br\", \"ggf.br\", \"gov.br\", \"imb.br\", \"ind.br\", \"inf.br\", \"jor.br\", \"jus.br\", \"lel.br\", \"mat.br\", \"med.br\", \"mil.br\", \"mus.br\", \"net.br\", \"nom.br\", \"not.br\", \"ntr.br\",\n \"odo.br\", \"org.br\", \"ppg.br\", \"pro.br\", \"psc.br\", \"psi.br\", \"qsl.br\", \"rec.br\", \"slg.br\", \"srv.br\", \"tmp.br\", \"trd.br\", \"tur.br\", \"tv.br\", \"vet.br\", \"vlog.br\", \"wiki.br\", \"zlg.br\",\n \"com.bs\", \"net.bs\", \"org.bs\", \"edu.bs\", \"gov.bs\", \"om.bz\", \"du.bz\", \"ov.bz\", \"et.bz\", \"rg.bz\", \"ab.ca\", \"bc.ca\", \"mb.ca\", \"nb.ca\", \"nf.ca\", \"nl.ca\", \"ns.ca\", \"nt.ca\", \"nu.ca\", \"on.ca\",\n \"pe.ca\", \"qc.ca\", \"sk.ca\", \"yk.ca\", \"co.ck\", \"org.ck\", \"edu.ck\", \"gov.ck\", \"net.ck\", \"gen.ck\", \"biz.ck\", \"info.ck\", \"ac.cn\", \"com.cn\", \"edu.cn\", \"gov.cn\", \"mil.cn\", \"net.cn\", \"org.cn\",\n \"ah.cn\", \"bj.cn\", \"cq.cn\", \"fj.cn\", \"gd.cn\", \"gs.cn\", \"gz.cn\", \"gx.cn\", \"ha.cn\", \"hb.cn\", \"he.cn\", \"hi.cn\", \"hl.cn\", \"hn.cn\", \"jl.cn\", \"js.cn\", \"jx.cn\", \"ln.cn\", \"nm.cn\", \"nx.cn\",\n \"qh.cn\", \"sc.cn\", \"sd.cn\", \"sh.cn\", \"sn.cn\", \"sx.cn\", \"tj.cn\", \"tw.cn\", \"xj.cn\", \"xz.cn\", \"yn.cn\", \"zj.cn\", \"com.co\", \"org.co\", \"edu.co\", \"gov.co\", \"net.co\", \"mil.co\", \"nom.co\",\n \"ac.cr\", \"co.cr\", \"ed.cr\", \"fi.cr\", \"go.cr\", \"or.cr\", \"sa.cr\", \"cr\", \"ac.cy\", \"net.cy\", \"gov.cy\", \"org.cy\", \"pro.cy\", \"name.cy\", \"ekloges.cy\", \"tm.cy\", \"ltd.cy\", \"biz.cy\", \"press.cy\",\n \"parliament.cy\", \"com.cy\", \"edu.do\", \"gob.do\", \"gov.do\", \"com.do\", \"sld.do\", \"org.do\", \"net.do\", \"web.do\", \"mil.do\", \"art.do\", \"com.dz\", \"org.dz\", \"net.dz\", \"gov.dz\", \"edu.dz\",\n \"asso.dz\", \"pol.dz\", \"art.dz\", \"com.ec\", \"info.ec\", \"net.ec\", \"fin.ec\", \"med.ec\", \"pro.ec\", \"org.ec\", \"edu.ec\", \"gov.ec\", \"mil.ec\", \"com.eg\", \"edu.eg\", \"eun.eg\", \"gov.eg\", \"mil.eg\",\n \"name.eg\", \"net.eg\", \"org.eg\", \"sci.eg\", \"com.er\", \"edu.er\", \"gov.er\", \"mil.er\", \"net.er\", \"org.er\", \"ind.er\", \"rochest.er\", \"w.er\", \"com.es\", \"nom.es\", \"org.es\", \"gob.es\", \"edu.es\",\n \"com.et\", \"gov.et\", \"org.et\", \"edu.et\", \"net.et\", \"biz.et\", \"name.et\", \"info.et\", \"ac.fj\", \"biz.fj\", \"com.fj\", \"info.fj\", \"mil.fj\", \"name.fj\", \"net.fj\", \"org.fj\", \"pro.fj\", \"co.fk\",\n \"org.fk\", \"gov.fk\", \"ac.fk\", \"nom.fk\", \"net.fk\", \"fr\", \"tm.fr\", \"asso.fr\", \"nom.fr\", \"prd.fr\", \"presse.fr\", \"com.fr\", \"gouv.fr\", \"co.gg\", \"net.gg\", \"org.gg\", \"com.gh\", \"edu.gh\",\n \"gov.gh\", \"org.gh\", \"mil.gh\", \"com.gn\", \"ac.gn\", \"gov.gn\", \"org.gn\", \"net.gn\", \"com.gr\", \"edu.gr\", \"net.gr\", \"org.gr\", \"gov.gr\", \"mil.gr\", \"com.gt\", \"edu.gt\", \"net.gt\", \"gob.gt\",\n \"org.gt\", \"mil.gt\", \"ind.gt\", \"com.gu\", \"net.gu\", \"gov.gu\", \"org.gu\", \"edu.gu\", \"com.hk\", \"edu.hk\", \"gov.hk\", \"idv.hk\", \"net.hk\", \"org.hk\", \"ac.id\", \"co.id\", \"net.id\", \"or.id\",\n \"web.id\", \"sch.id\", \"mil.id\", \"go.id\", \"war.net.id\", \"ac.il\", \"co.il\", \"org.il\", \"net.il\", \"k12.il\", \"gov.il\", \"muni.il\", \"idf.il\", \"in\", \"4fd.in\", \"co.in\", \"firm.in\", \"net.in\",\n \"org.in\", \"gen.in\", \"ind.in\", \"ac.in\", \"edu.in\", \"res.in\", \"ernet.in\", \"gov.in\", \"mil.in\", \"nic.in\", \"nic.in\", \"iq\", \"gov.iq\", \"edu.iq\", \"com.iq\", \"mil.iq\", \"org.iq\", \"net.iq\", \"ir\",\n \"ac.ir\", \"co.ir\", \"gov.ir\", \"id.ir\", \"net.ir\", \"org.ir\", \"sch.ir\", \"dnssec.ir\", \"gov.it\", \"edu.it\", \"co.je\", \"net.je\", \"org.je\", \"com.jo\", \"net.jo\", \"gov.jo\", \"edu.jo\", \"org.jo\",\n \"mil.jo\", \"name.jo\", \"sch.jo\", \"ac.jp\", \"ad.jp\", \"co.jp\", \"ed.jp\", \"go.jp\", \"gr.jp\", \"lg.jp\", \"ne.jp\", \"or.jp\", \"co.ke\", \"or.ke\", \"ne.ke\", \"go.ke\", \"ac.ke\", \"sc.ke\", \"me.ke\", \"mobi.ke\",\n \"info.ke\", \"per.kh\", \"com.kh\", \"edu.kh\", \"gov.kh\", \"mil.kh\", \"net.kh\", \"org.kh\", \"com.ki\", \"biz.ki\", \"de.ki\", \"net.ki\", \"info.ki\", \"org.ki\", \"gov.ki\", \"edu.ki\", \"mob.ki\", \"tel.ki\",\n \"km\", \"com.km\", \"coop.km\", \"asso.km\", \"nom.km\", \"presse.km\", \"tm.km\", \"medecin.km\", \"notaires.km\", \"pharmaciens.km\", \"veterinaire.km\", \"edu.km\", \"gouv.km\", \"mil.km\", \"net.kn\", \"org.kn\",\n \"edu.kn\", \"gov.kn\", \"kr\", \"co.kr\", \"ne.kr\", \"or.kr\", \"re.kr\", \"pe.kr\", \"go.kr\", \"mil.kr\", \"ac.kr\", \"hs.kr\", \"ms.kr\", \"es.kr\", \"sc.kr\", \"kg.kr\", \"seoul.kr\", \"busan.kr\", \"daegu.kr\",\n \"incheon.kr\", \"gwangju.kr\", \"daejeon.kr\", \"ulsan.kr\", \"gyeonggi.kr\", \"gangwon.kr\", \"chungbuk.kr\", \"chungnam.kr\", \"jeonbuk.kr\", \"jeonnam.kr\", \"gyeongbuk.kr\", \"gyeongnam.kr\", \"jeju.kr\",\n \"edu.kw\", \"com.kw\", \"net.kw\", \"org.kw\", \"gov.kw\", \"com.ky\", \"org.ky\", \"net.ky\", \"edu.ky\", \"gov.ky\", \"com.kz\", \"edu.kz\", \"gov.kz\", \"mil.kz\", \"net.kz\", \"org.kz\", \"com.lb\", \"edu.lb\",\n \"gov.lb\", \"net.lb\", \"org.lb\", \"gov.lk\", \"sch.lk\", \"net.lk\", \"int.lk\", \"com.lk\", \"org.lk\", \"edu.lk\", \"ngo.lk\", \"soc.lk\", \"web.lk\", \"ltd.lk\", \"assn.lk\", \"grp.lk\", \"hotel.lk\", \"com.lr\",\n \"edu.lr\", \"gov.lr\", \"org.lr\", \"net.lr\", \"com.lv\", \"edu.lv\", \"gov.lv\", \"org.lv\", \"mil.lv\", \"id.lv\", \"net.lv\", \"asn.lv\", \"conf.lv\", \"com.ly\", \"net.ly\", \"gov.ly\", \"plc.ly\", \"edu.ly\",\n \"sch.ly\", \"med.ly\", \"org.ly\", \"id.ly\", \"ma\", \"net.ma\", \"ac.ma\", \"org.ma\", \"gov.ma\", \"press.ma\", \"co.ma\", \"tm.mc\", \"asso.mc\", \"co.me\", \"net.me\", \"org.me\", \"edu.me\", \"ac.me\", \"gov.me\",\n \"its.me\", \"priv.me\", \"org.mg\", \"nom.mg\", \"gov.mg\", \"prd.mg\", \"tm.mg\", \"edu.mg\", \"mil.mg\", \"com.mg\", \"com.mk\", \"org.mk\", \"net.mk\", \"edu.mk\", \"gov.mk\", \"inf.mk\", \"name.mk\", \"pro.mk\",\n \"com.ml\", \"net.ml\", \"org.ml\", \"edu.ml\", \"gov.ml\", \"presse.ml\", \"gov.mn\", \"edu.mn\", \"org.mn\", \"com.mo\", \"edu.mo\", \"gov.mo\", \"net.mo\", \"org.mo\", \"com.mt\", \"org.mt\", \"net.mt\", \"edu.mt\",\n \"gov.mt\", \"aero.mv\", \"biz.mv\", \"com.mv\", \"coop.mv\", \"edu.mv\", \"gov.mv\", \"info.mv\", \"int.mv\", \"mil.mv\", \"museum.mv\", \"name.mv\", \"net.mv\", \"org.mv\", \"pro.mv\", \"ac.mw\", \"co.mw\", \"com.mw\",\n \"coop.mw\", \"edu.mw\", \"gov.mw\", \"int.mw\", \"museum.mw\", \"net.mw\", \"org.mw\", \"com.mx\", \"net.mx\", \"org.mx\", \"edu.mx\", \"gob.mx\", \"com.my\", \"net.my\", \"org.my\", \"gov.my\", \"edu.my\", \"sch.my\",\n \"mil.my\", \"name.my\", \"com.nf\", \"net.nf\", \"arts.nf\", \"store.nf\", \"web.nf\", \"firm.nf\", \"info.nf\", \"other.nf\", \"per.nf\", \"rec.nf\", \"com.ng\", \"org.ng\", \"gov.ng\", \"edu.ng\", \"net.ng\",\n \"sch.ng\", \"name.ng\", \"mobi.ng\", \"biz.ng\", \"mil.ng\", \"gob.ni\", \"co.ni\", \"com.ni\", \"ac.ni\", \"edu.ni\", \"org.ni\", \"nom.ni\", \"net.ni\", \"mil.ni\", \"com.np\", \"edu.np\", \"gov.np\", \"org.np\",\n \"mil.np\", \"net.np\", \"edu.nr\", \"gov.nr\", \"biz.nr\", \"info.nr\", \"net.nr\", \"org.nr\", \"com.nr\", \"com.om\", \"co.om\", \"edu.om\", \"ac.om\", \"sch.om\", \"gov.om\", \"net.om\", \"org.om\", \"mil.om\",\n \"museum.om\", \"biz.om\", \"pro.om\", \"med.om\", \"edu.pe\", \"gob.pe\", \"nom.pe\", \"mil.pe\", \"sld.pe\", \"org.pe\", \"com.pe\", \"net.pe\", \"com.ph\", \"net.ph\", \"org.ph\", \"mil.ph\", \"ngo.ph\", \"i.ph\",\n \"gov.ph\", \"edu.ph\", \"com.pk\", \"net.pk\", \"edu.pk\", \"org.pk\", \"fam.pk\", \"biz.pk\", \"web.pk\", \"gov.pk\", \"gob.pk\", \"gok.pk\", \"gon.pk\", \"gop.pk\", \"gos.pk\", \"pwr.pl\", \"com.pl\", \"biz.pl\",\n \"net.pl\", \"art.pl\", \"edu.pl\", \"org.pl\", \"ngo.pl\", \"gov.pl\", \"info.pl\", \"mil.pl\", \"waw.pl\", \"warszawa.pl\", \"wroc.pl\", \"wroclaw.pl\", \"krakow.pl\", \"katowice.pl\", \"poznan.pl\", \"lodz.pl\",\n \"gda.pl\", \"gdansk.pl\", \"slupsk.pl\", \"radom.pl\", \"szczecin.pl\", \"lublin.pl\", \"bialystok.pl\", \"olsztyn.pl\", \"torun.pl\", \"gorzow.pl\", \"zgora.pl\", \"biz.pr\", \"com.pr\", \"edu.pr\", \"gov.pr\",\n \"info.pr\", \"isla.pr\", \"name.pr\", \"net.pr\", \"org.pr\", \"pro.pr\", \"est.pr\", \"prof.pr\", \"ac.pr\", \"com.ps\", \"net.ps\", \"org.ps\", \"edu.ps\", \"gov.ps\", \"plo.ps\", \"sec.ps\", \"co.pw\", \"ne.pw\",\n \"or.pw\", \"ed.pw\", \"go.pw\", \"belau.pw\", \"arts.ro\", \"com.ro\", \"firm.ro\", \"info.ro\", \"nom.ro\", \"nt.ro\", \"org.ro\", \"rec.ro\", \"store.ro\", \"tm.ro\", \"www.ro\", \"co.rs\", \"org.rs\", \"edu.rs\",\n \"ac.rs\", \"gov.rs\", \"in.rs\", \"com.sb\", \"net.sb\", \"edu.sb\", \"org.sb\", \"gov.sb\", \"com.sc\", \"net.sc\", \"edu.sc\", \"gov.sc\", \"org.sc\", \"co.sh\", \"com.sh\", \"org.sh\", \"gov.sh\", \"edu.sh\",\n \"net.sh\", \"nom.sh\", \"com.sl\", \"net.sl\", \"org.sl\", \"edu.sl\", \"gov.sl\", \"gov.st\", \"saotome.st\", \"principe.st\", \"consulado.st\", \"embaixada.st\", \"org.st\", \"edu.st\", \"net.st\", \"com.st\",\n \"store.st\", \"mil.st\", \"co.st\", \"edu.sv\", \"gob.sv\", \"com.sv\", \"org.sv\", \"red.sv\", \"co.sz\", \"ac.sz\", \"org.sz\", \"com.tr\", \"gen.tr\", \"org.tr\", \"biz.tr\", \"info.tr\", \"av.tr\", \"dr.tr\",\n \"pol.tr\", \"bel.tr\", \"tsk.tr\", \"bbs.tr\", \"k12.tr\", \"edu.tr\", \"name.tr\", \"net.tr\", \"gov.tr\", \"web.tr\", \"tel.tr\", \"tv.tr\", \"co.tt\", \"com.tt\", \"org.tt\", \"net.tt\", \"biz.tt\", \"info.tt\",\n \"pro.tt\", \"int.tt\", \"coop.tt\", \"jobs.tt\", \"mobi.tt\", \"travel.tt\", \"museum.tt\", \"aero.tt\", \"cat.tt\", \"tel.tt\", \"name.tt\", \"mil.tt\", \"edu.tt\", \"gov.tt\", \"edu.tw\", \"gov.tw\", \"mil.tw\",\n \"com.tw\", \"net.tw\", \"org.tw\", \"idv.tw\", \"game.tw\", \"ebiz.tw\", \"club.tw\", \"com.mu\", \"gov.mu\", \"net.mu\", \"org.mu\", \"ac.mu\", \"co.mu\", \"or.mu\", \"ac.mz\", \"co.mz\", \"edu.mz\", \"org.mz\",\n \"gov.mz\", \"com.na\", \"co.na\", \"ac.nz\", \"co.nz\", \"cri.nz\", \"geek.nz\", \"gen.nz\", \"govt.nz\", \"health.nz\", \"iwi.nz\", \"maori.nz\", \"mil.nz\", \"net.nz\", \"org.nz\", \"parliament.nz\", \"school.nz\",\n \"abo.pa\", \"ac.pa\", \"com.pa\", \"edu.pa\", \"gob.pa\", \"ing.pa\", \"med.pa\", \"net.pa\", \"nom.pa\", \"org.pa\", \"sld.pa\", \"com.pt\", \"edu.pt\", \"gov.pt\", \"int.pt\", \"net.pt\", \"nome.pt\", \"org.pt\",\n \"publ.pt\", \"com.py\", \"edu.py\", \"gov.py\", \"mil.py\", \"net.py\", \"org.py\", \"com.qa\", \"edu.qa\", \"gov.qa\", \"mil.qa\", \"net.qa\", \"org.qa\", \"asso.re\", \"com.re\", \"nom.re\", \"ac.ru\", \"adygeya.ru\",\n \"altai.ru\", \"amur.ru\", \"arkhangelsk.ru\", \"astrakhan.ru\", \"bashkiria.ru\", \"belgorod.ru\", \"bir.ru\", \"bryansk.ru\", \"buryatia.ru\", \"cbg.ru\", \"chel.ru\", \"chelyabinsk.ru\", \"chita.ru\",\n \"chita.ru\", \"chukotka.ru\", \"chuvashia.ru\", \"com.ru\", \"dagestan.ru\", \"e-burg.ru\", \"edu.ru\", \"gov.ru\", \"grozny.ru\", \"int.ru\", \"irkutsk.ru\", \"ivanovo.ru\", \"izhevsk.ru\", \"jar.ru\",\n \"joshkar-ola.ru\", \"kalmykia.ru\", \"kaluga.ru\", \"kamchatka.ru\", \"karelia.ru\", \"kazan.ru\", \"kchr.ru\", \"kemerovo.ru\", \"khabarovsk.ru\", \"khakassia.ru\", \"khv.ru\", \"kirov.ru\", \"koenig.ru\",\n \"komi.ru\", \"kostroma.ru\", \"kranoyarsk.ru\", \"kuban.ru\", \"kurgan.ru\", \"kursk.ru\", \"lipetsk.ru\", \"magadan.ru\", \"mari.ru\", \"mari-el.ru\", \"marine.ru\", \"mil.ru\", \"mordovia.ru\", \"mosreg.ru\",\n \"msk.ru\", \"murmansk.ru\", \"nalchik.ru\", \"net.ru\", \"nnov.ru\", \"nov.ru\", \"novosibirsk.ru\", \"nsk.ru\", \"omsk.ru\", \"orenburg.ru\", \"org.ru\", \"oryol.ru\", \"penza.ru\", \"perm.ru\", \"pp.ru\",\n \"pskov.ru\", \"ptz.ru\", \"rnd.ru\", \"ryazan.ru\", \"sakhalin.ru\", \"samara.ru\", \"saratov.ru\", \"simbirsk.ru\", \"smolensk.ru\", \"spb.ru\", \"stavropol.ru\", \"stv.ru\", \"surgut.ru\", \"tambov.ru\",\n \"tatarstan.ru\", \"tom.ru\", \"tomsk.ru\", \"tsaritsyn.ru\", \"tsk.ru\", \"tula.ru\", \"tuva.ru\", \"tver.ru\", \"tyumen.ru\", \"udm.ru\", \"udmurtia.ru\", \"ulan-ude.ru\", \"vladikavkaz.ru\", \"vladimir.ru\",\n \"vladivostok.ru\", \"volgograd.ru\", \"vologda.ru\", \"voronezh.ru\", \"vrn.ru\", \"vyatka.ru\", \"yakutia.ru\", \"yamal.ru\", \"yekaterinburg.ru\", \"yuzhno-sakhalinsk.ru\", \"ac.rw\", \"co.rw\", \"com.rw\",\n \"edu.rw\", \"gouv.rw\", \"gov.rw\", \"int.rw\", \"mil.rw\", \"net.rw\", \"com.sa\", \"edu.sa\", \"gov.sa\", \"med.sa\", \"net.sa\", \"org.sa\", \"pub.sa\", \"sch.sa\", \"com.sd\", \"edu.sd\", \"gov.sd\", \"info.sd\",\n \"med.sd\", \"net.sd\", \"org.sd\", \"tv.sd\", \"a.se\", \"ac.se\", \"b.se\", \"bd.se\", \"c.se\", \"d.se\", \"e.se\", \"f.se\", \"g.se\", \"h.se\", \"i.se\", \"k.se\", \"l.se\", \"m.se\", \"n.se\", \"o.se\", \"org.se\",\n \"p.se\", \"parti.se\", \"pp.se\", \"press.se\", \"r.se\", \"s.se\", \"t.se\", \"tm.se\", \"u.se\", \"w.se\", \"x.se\", \"y.se\", \"z.se\", \"com.sg\", \"edu.sg\", \"gov.sg\", \"idn.sg\", \"net.sg\", \"org.sg\", \"per.sg\",\n \"art.sn\", \"com.sn\", \"edu.sn\", \"gouv.sn\", \"org.sn\", \"perso.sn\", \"univ.sn\", \"com.sy\", \"edu.sy\", \"gov.sy\", \"mil.sy\", \"net.sy\", \"news.sy\", \"org.sy\", \"ac.th\", \"co.th\", \"go.th\", \"in.th\",\n \"mi.th\", \"net.th\", \"or.th\", \"ac.tj\", \"biz.tj\", \"co.tj\", \"com.tj\", \"edu.tj\", \"go.tj\", \"gov.tj\", \"info.tj\", \"int.tj\", \"mil.tj\", \"name.tj\", \"net.tj\", \"nic.tj\", \"org.tj\", \"test.tj\",\n \"web.tj\", \"agrinet.tn\", \"com.tn\", \"defense.tn\", \"edunet.tn\", \"ens.tn\", \"fin.tn\", \"gov.tn\", \"ind.tn\", \"info.tn\", \"intl.tn\", \"mincom.tn\", \"nat.tn\", \"net.tn\", \"org.tn\", \"perso.tn\",\n \"rnrt.tn\", \"rns.tn\", \"rnu.tn\", \"tourism.tn\", \"ac.tz\", \"co.tz\", \"go.tz\", \"ne.tz\", \"or.tz\", \"biz.ua\", \"cherkassy.ua\", \"chernigov.ua\", \"chernovtsy.ua\", \"ck.ua\", \"cn.ua\", \"co.ua\",\n \"com.ua\", \"crimea.ua\", \"cv.ua\", \"dn.ua\", \"dnepropetrovsk.ua\", \"donetsk.ua\", \"dp.ua\", \"edu.ua\", \"gov.ua\", \"if.ua\", \"in.ua\", \"ivano-frankivsk.ua\", \"kh.ua\", \"kharkov.ua\", \"kherson.ua\",\n \"khmelnitskiy.ua\", \"kiev.ua\", \"kirovograd.ua\", \"km.ua\", \"kr.ua\", \"ks.ua\", \"kv.ua\", \"lg.ua\", \"lugansk.ua\", \"lutsk.ua\", \"lviv.ua\", \"me.ua\", \"mk.ua\", \"net.ua\", \"nikolaev.ua\", \"od.ua\",\n \"odessa.ua\", \"org.ua\", \"pl.ua\", \"poltava.ua\", \"pp.ua\", \"rovno.ua\", \"rv.ua\", \"sebastopol.ua\", \"sumy.ua\", \"te.ua\", \"ternopil.ua\", \"uzhgorod.ua\", \"vinnica.ua\", \"vn.ua\", \"zaporizhzhe.ua\",\n \"zhitomir.ua\", \"zp.ua\", \"zt.ua\", \"ac.ug\", \"co.ug\", \"go.ug\", \"ne.ug\", \"or.ug\", \"org.ug\", \"sc.ug\", \"ac.uk\", \"bl.uk\", \"british-library.uk\", \"co.uk\", \"cym.uk\", \"gov.uk\", \"govt.uk\",\n \"icnet.uk\", \"jet.uk\", \"lea.uk\", \"ltd.uk\", \"me.uk\", \"mil.uk\", \"mod.uk\", \"mod.uk\", \"national-library-scotland.uk\", \"nel.uk\", \"net.uk\", \"nhs.uk\", \"nhs.uk\", \"nic.uk\", \"nls.uk\", \"org.uk\",\n \"orgn.uk\", \"parliament.uk\", \"parliament.uk\", \"plc.uk\", \"police.uk\", \"sch.uk\", \"scot.uk\", \"soc.uk\", \"4fd.us\", \"dni.us\", \"fed.us\", \"isa.us\", \"kids.us\", \"nsn.us\", \"com.uy\", \"edu.uy\",\n \"gub.uy\", \"mil.uy\", \"net.uy\", \"org.uy\", \"co.ve\", \"com.ve\", \"edu.ve\", \"gob.ve\", \"info.ve\", \"mil.ve\", \"net.ve\", \"org.ve\", \"web.ve\", \"co.vi\", \"com.vi\", \"k12.vi\", \"net.vi\", \"org.vi\",\n \"ac.vn\", \"biz.vn\", \"com.vn\", \"edu.vn\", \"gov.vn\", \"health.vn\", \"info.vn\", \"int.vn\", \"name.vn\", \"net.vn\", \"org.vn\", \"pro.vn\", \"co.ye\", \"com.ye\", \"gov.ye\", \"ltd.ye\", \"me.ye\", \"net.ye\",\n \"org.ye\", \"plc.ye\", \"ac.yu\", \"co.yu\", \"edu.yu\", \"gov.yu\", \"org.yu\", \"ac.za\", \"agric.za\", \"alt.za\", \"bourse.za\", \"city.za\", \"co.za\", \"cybernet.za\", \"db.za\", \"ecape.school.za\", \"edu.za\",\n \"fs.school.za\", \"gov.za\", \"gp.school.za\", \"grondar.za\", \"iaccess.za\", \"imt.za\", \"inca.za\", \"kzn.school.za\", \"landesign.za\", \"law.za\", \"lp.school.za\", \"mil.za\", \"mpm.school.za\",\n \"ncape.school.za\", \"net.za\", \"ngo.za\", \"nis.za\", \"nom.za\", \"nw.school.za\", \"olivetti.za\", \"org.za\", \"pix.za\", \"school.za\", \"tm.za\", \"wcape.school.za\", \"web.za\", \"ac.zm\", \"co.zm\",\n \"com.zm\", \"edu.zm\", \"gov.zm\", \"net.zm\", \"org.zm\", \"schm.zm\"];\n\n        return secondDomains.indexOf(domain) > -1;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*\n * Created by Sergiu Stefan Turlea on Mon Sep 24 2018.\n *\n * Copyright (c) 2018 Bitdefender. All rights reserved.\n */\n\nimport * as BDTLL from \"../BDTLL_common\"\nimport { DH_CHECK_P_NOT_PRIME } from \"constants\";\nimport { BrowserConsts } from \"../common/browser_consts\";\n\ndeclare var params: any;\n\nclass Antiphishing {\n\n    constructor() {\n        let info = this.gatherInfo();\n        this.requestScan(info);\n    }\n\n    gatherInfo() {\n        var domainExtracted;\n        if (window.location.hostname.split(\"www.\")[1] == null) {\n            domainExtracted = window.location.hostname;\n        } else {\n            domainExtracted = window.location.hostname.split(\"www.\")[1];\n        }\n        var meta = \"\";\n        var metaObj = document.getElementsByTagName(\"meta\");\n        for (var v = 0; v < metaObj.length; v++) {\n            for (var i = 0; i < metaObj[v].attributes.length; i++) {\n                meta += \" \" + metaObj[v].attributes[i].value;\n            }\n        }\n\n        var scripts = new Array();\n        for (var s = 0; s < document.getElementsByTagName('script').length; s++) {\n            var serializer = new XMLSerializer().serializeToString(\n            document.scripts[s]);\n            scripts.push(serializer);\n        }\n        for (var f = 0; f < document.getElementsByTagName(\"iframe\").length; f++) {\n            var serializer = new XMLSerializer().serializeToString(\n            document.getElementsByTagName(\"iframe\")[f]);\n            scripts.push(serializer);\n        }\n\n        return {\n            url: location.href.split('#')[0],\n            body: document.getElementsByTagName(\"html\")[0]\n                .innerHTML.replace(/\\s+/g, \" \"),\n            title: document.title,\n            meta: meta,\n            domain: domainExtracted,\n            scripts: scripts\n        }\n    }\n\n    requestScan(info: any) {\n        if (BDTLL.DEBUG_MODE) {\n            console.log(\"Sending APH request...\");\n        }\n        BDTLL.MessageService.messageBackground({\n            command: BDTLL.Command.SCAN_PAGE,\n            request: info\n        });\n    }\n}\n\nlet APH = new Antiphishing();"],"sourceRoot":""}